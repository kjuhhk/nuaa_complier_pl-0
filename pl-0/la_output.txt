program RESERVED 1 8
fibonacci id 1 18
; EOP 1 19
var RESERVED 2 4
return id 2 11
, SOP 2 12
i id 2 13
, SOP 2 14
index id 2 19
; EOP 2 20
procedure RESERVED 3 10
fib id 3 14
( SOP 3 15
x id 3 16
) SOP 3 17
; EOP 3 18
var RESERVED 4 4
sum id 4 8
; EOP 4 9
begin RESERVED 5 6
sum id 6 8
:= AOP 6 10
0 INT 6 11
; EOP 6 12
if RESERVED 7 7
x id 7 9
< COP 7 10
2 INT 7 11
then RESERVED 7 16
return id 8 15
:= AOP 8 17
x id 8 18
else RESERVED 9 9
begin RESERVED 10 10
call RESERVED 11 13
fib id 11 17
( SOP 11 18
x id 11 19
- OOP 11 20
1 INT 11 21
) SOP 11 22
; EOP 11 23
sum id 12 12
:= AOP 12 14
sum id 12 17
+ OOP 12 18
return id 12 24
; EOP 12 25
call RESERVED 13 13
fib id 13 17
( SOP 13 18
x id 13 19
- OOP 13 20
2 INT 13 21
) SOP 13 22
; EOP 13 23
sum id 14 12
:= AOP 14 14
sum id 14 17
+ OOP 14 18
return id 14 24
; EOP 14 25
return id 15 15
:= AOP 15 17
sum id 15 20
end RESERVED 16 8
end RESERVED 17 4
begin RESERVED 18 6
i id 19 6
:= AOP 19 8
1 INT 19 9
; EOP 19 10
read RESERVED 20 9
( SOP 20 10
index id 20 15
) SOP 20 16
; EOP 20 17
write RESERVED 21 10
( SOP 21 11
index id 21 16
) SOP 21 17
; EOP 21 18
while RESERVED 22 10
i id 22 12
<= COP 22 14
index id 22 19
do RESERVED 22 22
begin RESERVED 23 10
call RESERVED 24 13
fib id 24 17
( SOP 24 18
i id 24 19
) SOP 24 20
; EOP 24 21
write RESERVED 25 14
( SOP 25 15
return id 25 21
) SOP 25 22
; EOP 25 23
i id 26 10
:= AOP 26 12
i id 26 13
+ OOP 26 14
1 INT 26 15
end RESERVED 27 8
end RESERVED 28 4
