program RESERVED 1 8
fibonacci id 1 18
; EOP 1 19
const RESERVED 2 6
index id 2 12
:= AOP 2 14
30 INT 2 16
; EOP 2 17
var RESERVED 3 4
return id 3 11
, SOP 3 12
i id 3 13
; EOP 3 14
procedure RESERVED 4 14
fib id 4 18
( SOP 4 19
x id 4 20
) SOP 4 21
; EOP 4 22
var RESERVED 5 8
sum id 5 12
; EOP 5 13
begin RESERVED 6 10
sum id 7 8
:= AOP 7 10
0 INT 7 11
; EOP 7 12
if RESERVED 8 7
x id 8 9
< COP 8 10
2 INT 8 11
then RESERVED 8 16
return id 9 15
:= AOP 9 17
x id 9 18
else RESERVED 10 9
begin RESERVED 11 10
call RESERVED 12 17
fib id 12 21
( SOP 12 22
x id 12 23
- OOP 12 24
1 INT 12 25
) SOP 12 26
; EOP 12 27
sum id 13 16
:= AOP 13 18
sum id 13 21
+ OOP 13 22
return id 13 28
; EOP 13 29
call RESERVED 14 17
fib id 14 21
( SOP 14 22
x id 14 23
- OOP 14 24
2 INT 14 25
) SOP 14 26
; EOP 14 27
sum id 15 16
:= AOP 15 18
sum id 15 21
+ OOP 15 22
return id 15 28
; EOP 15 29
return id 16 19
:= AOP 16 21
sum id 16 24
end RESERVED 17 12
end RESERVED 18 8
begin RESERVED 19 6
i id 20 6
:= AOP 20 8
1 INT 20 9
; EOP 20 10
while RESERVED 21 10
i id 21 12
<= COP 21 14
index id 21 19
do RESERVED 21 22
begin RESERVED 22 10
call RESERVED 23 13
fib id 23 17
( SOP 23 18
i id 23 19
) SOP 23 20
; EOP 23 21
write RESERVED 24 10
( SOP 24 11
return id 24 17
) SOP 24 18
; EOP 24 19
i id 25 10
:= AOP 25 12
i id 25 13
+ OOP 25 14
1 INT 25 15
end RESERVED 26 8
end RESERVED 27 4
